//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcrafter.h"


// Declare the bitmap loading function
extern void wxC9ED9InitBitmapResources();

static bool bBitmapLoaded = false;


MainFrameBaseClass::MainFrameBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer1 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer1);
    
    m_mainPanel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    
    boxSizer1->Add(m_mainPanel, 1, wxEXPAND, 5);
    
    m_auimgr13 = new wxAuiManager;
    m_auimgr13->SetManagedWindow( m_mainPanel );
    m_auimgr13->SetFlags( wxAUI_MGR_LIVE_RESIZE|wxAUI_MGR_TRANSPARENT_HINT|wxAUI_MGR_TRANSPARENT_DRAG|wxAUI_MGR_ALLOW_ACTIVE_PANE|wxAUI_MGR_ALLOW_FLOATING);
    m_auimgr13->GetArtProvider()->SetMetric(wxAUI_DOCKART_GRADIENT_TYPE, wxAUI_GRADIENT_NONE);
    
    m_auibar15 = new wxAuiToolBar(m_mainPanel, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxAUI_TB_DEFAULT_STYLE|wxAUI_TB_OVERFLOW|wxAUI_TB_TEXT);
    m_auibar15->SetToolBitmapSize(wxSize(16,16));
    
    m_auimgr13->AddPane(m_auibar15, wxAuiPaneInfo().Direction(wxAUI_DOCK_TOP).Layer(0).Row(0).Position(0).BestSize(150,52).MinSize(150,52).Fixed().CaptionVisible(false).MaximizeButton(false).CloseButton(false).MinimizeButton(false).PinButton(false).ToolbarPane());
    
    m_auibar15->AddTool(wxID_ANY, _("Ceci est un test"), wxXmlResource::Get()->LoadBitmap(wxT("placeholder16")), wxNullBitmap, wxITEM_NORMAL, wxT(""), wxT(""), NULL);
    m_auibar15->Realize();
    
    m_panel17 = new wxPanel(m_mainPanel, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    
    m_auimgr13->AddPane(m_panel17, wxAuiPaneInfo().Direction(wxAUI_DOCK_CENTER).Layer(0).Row(0).Position(0).BestSize(100,100).MinSize(100,100).MaxSize(100,100).Fixed().CaptionVisible(false).MaximizeButton(false).CloseButton(false).MinimizeButton(false).PinButton(false));
    
    wxFlexGridSizer* flexGridSizer43 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer43->SetFlexibleDirection( wxBOTH );
    flexGridSizer43->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    m_panel17->SetSizer(flexGridSizer43);
    
    m_button45 = new wxButton(m_panel17, wxID_ANY, _("Calcul du dÃ©terminant"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button45, 0, wxALL, 5);
    
    m_button47 = new wxButton(m_panel17, wxID_ANY, _("Addition"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button47, 0, wxALL, 5);
    
    m_button49 = new wxButton(m_panel17, wxID_ANY, _("My Button"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button49, 0, wxALL, 5);
    
    m_button51 = new wxButton(m_panel17, wxID_ANY, _("My Button"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button51, 0, wxALL, 5);
    
    m_button53 = new wxButton(m_panel17, wxID_ANY, _("My Button"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button53, 0, wxALL, 5);
    
    m_button55 = new wxButton(m_panel17, wxID_ANY, _("My Button"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer43->Add(m_button55, 0, wxALL, 5);
    
    m_panel23 = new wxPanel(m_mainPanel, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    
    m_auimgr13->AddPane(m_panel23, wxAuiPaneInfo().Caption(_("Historique")).Direction(wxAUI_DOCK_LEFT).Layer(0).Row(0).Position(0).BestSize(200,300).MinSize(200,300).CaptionVisible(true).MaximizeButton(true).CloseButton(true).MinimizeButton(true).PinButton(true));
    m_auimgr13->Update();
    
    wxFlexGridSizer* flexGridSizer29 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer29->SetFlexibleDirection( wxBOTH );
    flexGridSizer29->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer29->AddGrowableCol(0);
    flexGridSizer29->AddGrowableRow(0);
    m_panel23->SetSizer(flexGridSizer29);
    
    m_treeCtrl31 = new wxTreeCtrl(m_panel23, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTR_DEFAULT_STYLE);
    
    flexGridSizer29->Add(m_treeCtrl31, 0, wxALL|wxEXPAND, 0);
    
    m_menuBar = new wxMenuBar(0);
    this->SetMenuBar(m_menuBar);
    
    m_name6 = new wxMenu();
    m_menuBar->Append(m_name6, _("Fichier"));
    
    m_menuItem7 = new wxMenuItem(m_name6, wxID_EXIT, _("Exit\tAlt-X"), _("Quit"), wxITEM_NORMAL);
    m_name6->Append(m_menuItem7);
    
    m_name8 = new wxMenu();
    m_menuBar->Append(m_name8, _("Aide"));
    
    m_menuItem9 = new wxMenuItem(m_name8, wxID_ABOUT, _("About..."), wxT(""), wxITEM_NORMAL);
    m_name8->Append(m_menuItem9);
    
    m_menu39 = new wxMenu();
    m_menuBar->Append(m_menu39, _("Menu"));
    
    m_menuItem41 = new wxMenuItem(m_menu39, wxID_ANY, _("Item5"), wxT(""), wxITEM_NORMAL);
    m_menu39->Append(m_menuItem41);
    
    m_statusBar11 = new wxStatusBar(this, wxID_ANY, wxSTB_DEFAULT_STYLE);
    m_statusBar11->SetFieldsCount(1);
    this->SetStatusBar(m_statusBar11);
    
    SetSizeHints(900,700);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    m_button45->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::CalculDeterminant), NULL, this);
    this->Connect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnExit), NULL, this);
    this->Connect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnAbout), NULL, this);
    
}

MainFrameBaseClass::~MainFrameBaseClass()
{
    m_button45->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MainFrameBaseClass::CalculDeterminant), NULL, this);
    this->Disconnect(m_menuItem7->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnExit), NULL, this);
    this->Disconnect(m_menuItem9->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MainFrameBaseClass::OnAbout), NULL, this);
    
    m_auimgr13->UnInit();
    delete m_auimgr13;

}
